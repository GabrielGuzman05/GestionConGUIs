/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestionconguis;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriel
 */
public class GUIPersona extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form GUIPersona
     */
    protected ArrayList<Persona> personas;
    protected DefaultListModel<Persona> model = new DefaultListModel<>();

    public GUIPersona() {
        initComponents();
        jBAgregar.addActionListener(this);
        jBBuscar.addActionListener(this);
        jBEliminar.addActionListener(this);
        jBMostarTodo.addActionListener(this);
        jBMostrarDatos.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<Persona>(model);
        jBAgregar = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBBuscar = new javax.swing.JButton();
        jBMostarTodo = new javax.swing.JButton();
        jBMostrarDatos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jBAgregar.setText("Agregar");

        jBEliminar.setText("Eliminar");

        jBBuscar.setText("Buscar");

        jBMostarTodo.setText("Mostrar Todos");

        jBMostrarDatos.setText("Mostrar Datos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBAgregar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jBBuscar)
                        .addComponent(jBEliminar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBMostrarDatos)
                    .addComponent(jBMostarTodo))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAgregar)
                    .addComponent(jBMostarTodo))
                .addGap(29, 29, 29)
                .addComponent(jBEliminar)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBBuscar)
                    .addComponent(jBMostrarDatos))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIPersona().setVisible(true);
            }
        });
    }

    public void setList(ArrayList<Persona> per) {
        personas = per;
        for (Persona p : personas) {
            model.addElement(p);
        }
    }

    /*public javax.swing.JList<String> getList(){
        return this.jList1;
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton jBAgregar;
    protected javax.swing.JButton jBBuscar;
    protected javax.swing.JButton jBEliminar;
    protected javax.swing.JButton jBMostarTodo;
    protected javax.swing.JButton jBMostrarDatos;
    protected javax.swing.JList<Persona> jList1;
    protected javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == jBAgregar) {
            Persona p = new Persona(JOptionPane.showInputDialog(rootPane, "Ingrese "
                    + "el nombre de la nueva persona"), JOptionPane.showInputDialog(
                            rootPane, "Ingrese el apellido de la nueva persona"),
                    JOptionPane.showInputDialog(rootPane, "Ingrese el rut de la "
                            + "nueva persona"));
            personas.add(p);
            ((DefaultListModel) jList1.getModel()).addElement(p);
        } else if (e.getSource() == jBBuscar) {
            String[] list = {"Nombre", "Apellido", "Rut"};
            JComboBox jcb = new JComboBox(list);
            JOptionPane.showMessageDialog(null, jcb, "Seleccione el tipo de dato a buscar", JOptionPane.QUESTION_MESSAGE);
            String search = JOptionPane.showInputDialog(rootPane, "Dato de busqueda");
            boolean found = false;
            switch (jcb.getSelectedItem().toString()) {
                case "Nombre":
                    for (int i = 0; i < personas.size(); i++) {
                        if (personas.get(i).getNombre().equals(search)) {
                            if (!found) {
                                model.removeAllElements();
                            }
                            model.addElement(personas.get(i));
                            found = true;
                        }
                    }
                    break;

                case "Apellido":
                    for (int i = 0; i < personas.size(); i++) {
                        if (personas.get(i).getApellido().equals(search)) {
                            if (!found) {
                                model.removeAllElements();
                            }
                            model.addElement(personas.get(i));
                            found = true;
                        }
                    }
                    break;

                case "Rut":
                    for (int i = 0; i < personas.size(); i++) {
                        if (personas.get(i).getRut().equals(search)) {
                            if (!found) {
                                model.removeAllElements();
                            }
                            model.addElement(personas.get(i));
                            found = true;
                        }
                    }
                    break;
            }
            if (found) {
                JOptionPane.showMessageDialog(rootPane, "Encontradas " + model.size() + " coincidencias");
            }
        } else if (e.getSource() == jBEliminar) {
            personas.remove(model.getElementAt(jList1.getSelectedIndex()));
            model.remove(jList1.getSelectedIndex());
        } else if (e.getSource() == jBMostarTodo) {
            model.removeAllElements();
            for (Persona p : personas) {
                model.addElement(p);
            }
        } else if (e.getSource() == jBMostrarDatos) {
            Persona aux = model.getElementAt(jList1.getSelectedIndex());
            JOptionPane.showMessageDialog(rootPane, "La persona tienes estos datos: \n"
                + aux.getNombre() + " " + aux.getApellido() + "\n"
                + "RUT:" + aux.getRut());
        }
    }
}
